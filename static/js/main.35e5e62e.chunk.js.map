{"version":3,"sources":["components/WordQuizCard/WordQuizCard.js","components/SequenceQuizCard/SequenceQuizCard.js","components/Navbar/Sidebar.js","components/Button/Button.js","constants/index.js","components/History/History.js","components/Icon/index.js","components/Icon/Check.js","components/Icon/Failed.js","components/Icon/Retry.js","components/Icon/Skipped.js","containers/Index/index.js","containers/Words/Words.js","hooks/useLocalStorage.js","containers/Sequence/Sequence.js","App.js","serviceWorker.js","index.js"],"names":["shuffle","str","split","sort","Math","random","join","word","onNextClick","wordInRandomOrder","useMemo","toUpperCase","quizChars","firstChar","char","length","includes","chooseQuizChars","shuffledQuizChars","useState","selectedChar","setSelectedChar","showSolution","setShowSolution","className","map","key","type","name","checked","onChange","onClick","getDiff","round","generateSolution","last","dif1","dif2","counter","setCounter","sequence","firstNumber","push","difs","f","times","r","i","execTimes","correctSolution","solutions","gr","floor","a","e","console","log","indexOf","sa","Number","shuffledSolutions","j","num","selectedQuiz","setSelectedQuiz","props","children","words","require","CARD_STATUSES","SKIPPED","CORRECT","WRONG","elements","handleElementClick","maxWords","setMaxWords","mouseOver","setMouseOver","showAllWords","sliceFrom","count","reduce","element","correct","wrong","skipped","status","slice","reverse","mouseIsOver","toLowerCase","onMouseOver","onMouseLeave","Icon","Skipped","Failed","Check","Retry","xmlns","width","height","viewBox","style","fill","d","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","wordsSolved","setWordsSolved","reviewWord","setReviewWord","wordIndex","charPicked","concat","id","newSolution","wordCopy","App","Index","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35e5e62e.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Button } from \"..\";\n\nimport \"./WordQuizCard.css\";\n\nconst shuffle = str => {\n  return str\n    .split(\"\")\n    .sort(() => 0.5 - Math.random())\n    .join(\"\");\n};\n\nconst chooseQuizChars = word => {\n  const firstChar = word[0].toUpperCase();\n  const wordInRandomOrder = shuffle(word).toUpperCase();\n  let quizChars = firstChar;\n\n  for (let char in wordInRandomOrder) {\n    if (quizChars.length >= 4) {\n      break;\n    }\n\n    if (!quizChars.includes(wordInRandomOrder[char])) {\n      quizChars += wordInRandomOrder[char];\n    }\n  }\n\n  return quizChars;\n};\n\nexport default ({ word, onNextClick }) => {\n  const wordInRandomOrder = useMemo(() => shuffle(word).toUpperCase(), [word]);\n  const quizChars = useMemo(() => chooseQuizChars(word), [word]);\n  const shuffledQuizChars = useMemo(() => shuffle(quizChars), [quizChars]);\n  const [selectedChar, setSelectedChar] = useState(shuffledQuizChars[0]);\n  const [showSolution, setShowSolution] = useState(false);\n\n  return (\n    <div className=\"mt-de-word-quiz-card\">\n      <h2>{wordInRandomOrder}</h2>\n      <p>Dieses Wort beginnt mit dem Buchstaben:</p>\n      <ul>\n        {shuffledQuizChars.split(\"\").map(char => (\n          <li key={char}>\n            <input\n              type=\"radio\"\n              name=\"quiz-char\"\n              checked={char === selectedChar}\n              onChange={() => setSelectedChar(char)}\n            />\n            <span>{char}</span>\n          </li>\n        ))}\n      </ul>\n      {showSolution && <h3>{word}</h3>}\n      {!showSolution && (\n        <Button onClick={() => setShowSolution(true)}>Lösung</Button>\n      )}\n      {!showSolution && <Button onClick={() => onNextClick()}>Skip</Button>}\n      {showSolution && (\n        <Button onClick={() => onNextClick(selectedChar)}>Nächstes Wort</Button>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport { Button } from \"..\";\nimport \"./SequenceQuizCard.css\";\n\nconst getDiff = () => Math.round(Math.random() * 100 - 50);\n\nfunction execTimes(f, times) {\n  let r = [];\n  for (let i = 0; i < times; i++) {\n    r.push(f());\n  }\n  return r;\n}\n\nfunction generateSolution(last, dif1, dif2) {\n  return [last + dif1, last + dif1 + dif2];\n}\n\n//https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default () => {\n  const [counter, setCounter] = useState(0);\n  const { sequence, difs } = useMemo(() => {\n    let sequence = [];\n    const firstNumber = Math.round(Math.random() * 100);\n    sequence.push(firstNumber);\n    const difs = execTimes(getDiff, 3);\n    for (let i = 0; i < 6; i++) {\n      sequence.push(difs[i % 3] + sequence[i]);\n    }\n    return { sequence, difs };\n  }, [counter]);\n\n  const { solutions, correctSolution } = useMemo(() => {\n    const correctSolution = generateSolution(sequence[6], difs[0], difs[1]);\n    let solutions = [];\n    const gr = () => difs[Math.floor(Math.random() * 3)];\n    let a = [`${difs[0]};${difs[1]}`];\n    let i = 0;\n    while (i < 3) {\n      const e = `${gr()};${gr()}`;\n      console.log(a);\n      if (a.indexOf(e)) {\n        a.push(e);\n        i++;\n      }\n    }\n    for (let r in a) {\n      const sa = a[r].split(\";\");\n      console.log(sa);\n      solutions.push(\n        generateSolution(sequence[6], Number(sa[0]), Number(sa[1]))\n      );\n    }\n    return { solutions, correctSolution };\n  }, [sequence, difs]);\n  const shuffledSolutions = useMemo(() => shuffle(solutions), [solutions]);\n\n  const [showSolution, setShowSolution] = useState(false);\n\n  return (\n    <div className=\"ltn-de-sqc\">\n      <div className=\"ltn-de-sqc-sequence\">\n        {sequence.map(num => (\n          <h2>{num}</h2>\n        ))}\n      </div>\n      <p>Diese Folge kann mit folgenden Zahlen erweitert werden:</p>\n      <ul>\n        {shuffledSolutions.map(([dif1, dif2]) => (\n          <li>\n            <input type=\"radio\" name=\"quiz-char\" />[{dif1}, {dif2}]\n          </li>\n        ))}\n      </ul>\n      {showSolution && (\n        <h3>\n          [{correctSolution[0]}, {correctSolution[1]}]\n        </h3>\n      )}\n      {!showSolution && (\n        <Button onClick={() => setShowSolution(true)}>Lösung</Button>\n      )}\n      {showSolution && (\n        <Button\n          onClick={() => {\n            setCounter(counter + 1);\n            setShowSolution(false);\n          }}\n        >\n          Nächste Folge\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"..\";\nimport \"./Sidebar.css\";\n\nexport default ({ selectedQuiz, setSelectedQuiz }) => {\n  return (\n    <div className=\"mt-de-navbar\">\n      <h2>Medat Training</h2>\n      <div>\n        <Button onClick={() => setSelectedQuiz(\"sequence\")}>Folgen</Button>\n        <Button onClick={() => setSelectedQuiz(\"words\")}>Wörter</Button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nexport default props => (\n  <button className=\"mt-de-button\" {...props}>\n    {props.children}\n  </button>\n);\n","export const words = require(\"./words.json\");\n\nexport const CARD_STATUSES = {\n  SKIPPED: \"SKIPPED\",\n  CORRECT: \"CORRECT\",\n  WRONG: \"WRONG\"\n};\n","import React, { useState } from \"react\";\nimport { Button, Icon } from \"..\";\nimport { CARD_STATUSES } from \"../../constants\";\n\nimport \"./History.css\";\n\nconst HISTORY_STEP_SIZE = 10;\nconst { SKIPPED, CORRECT, WRONG } = CARD_STATUSES;\n\nexport default ({ elements = [], handleElementClick }) => {\n  const [maxWords, setMaxWords] = useState(HISTORY_STEP_SIZE);\n  const [mouseOver, setMouseOver] = useState();\n  const showAllWords = elements.length <= maxWords;\n  const sliceFrom = showAllWords ? 0 : elements.length - maxWords;\n  const count = elements.reduce(\n    ({ correct, wrong, skipped }, element) => ({\n      correct: element.status === CORRECT ? correct + 1 : correct,\n      wrong: element.status === WRONG ? wrong + 1 : wrong,\n      skipped: element.status === SKIPPED ? skipped + 1 : skipped\n    }),\n    { correct: 0, wrong: 0, skipped: 0 }\n  );\n  return (\n    <div className=\"mt-de-history\">\n      <div className=\"mt-de-history-header\">\n        <h2>History</h2>\n        <h2>\n          {count.correct}/{count.correct + count.wrong}\n        </h2>\n      </div>\n      <ul className=\"mt-de-history-list\">\n        {elements\n          .slice(sliceFrom)\n          .reverse()\n          .map((element, i) => {\n            const { word, status } = element;\n            const mouseIsOver = mouseOver === i;\n            return (\n              <li\n                className={`mt-de-history-list-item mt-de-history-list-item-${status.toLowerCase()}`}\n                onMouseOver={() => setMouseOver(i)}\n                onMouseLeave={() => setMouseOver()}\n                onClick={() => handleElementClick(element)}\n              >\n                <span>{word}</span>\n                <div className=\"mt-de-history-list-item-icon\">\n                  {!mouseIsOver && status === SKIPPED && <Icon.Skipped />}\n                  {!mouseIsOver && status === WRONG && <Icon.Failed />}\n                  {!mouseIsOver && status === CORRECT && <Icon.Check />}\n                  {mouseIsOver && <Icon.Retry />}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {!showAllWords && (\n        <Button onClick={() => setMaxWords(maxWords + HISTORY_STEP_SIZE)}>\n          Mehr\n        </Button>\n      )}\n    </div>\n  );\n};\n","import Check from \"./Check\";\nimport Failed from \"./Failed\";\nimport Retry from \"./Retry\";\nimport Skipped from \"./Skipped\";\n\nexport default {\n  Check,\n  Failed,\n  Retry,\n  Skipped\n};\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.16 0-7.74 2.42-9.44 5.93-.32.67.04 1.47.75 1.71.59.2 1.23-.08 1.5-.64 1.3-2.66 4.03-4.5 7.19-4.5 1.95 0 3.73.72 5.12 1.88l-1.91 1.91c-.63.63-.19 1.71.7 1.71H21c.55 0 1-.45 1-1V9.41c0-.89-1.08-1.34-1.71-.71l-1.89 1.9z\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path d=\"M19 13H5v-2h14v2z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n","import React, { useState } from 'react';\nimport { Words, Sequence } from '..';\nimport { Navbar } from '../../components';\n\nexport default () => {\n\n    const [ selectedQuiz, setSelectedQuiz] = useState('words');\n\n    return (\n        <div>\n            <Navbar selectedQuiz={ selectedQuiz } setSelectedQuiz={ setSelectedQuiz }/>\n            {\n                selectedQuiz === 'words' && <Words />\n            }\n            {\n                selectedQuiz === 'sequence' && <Sequence />\n            }\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport { WordQuizCard, History } from \"../../components\";\nimport { words } from \"../../constants\";\nimport { useLocalStorage } from \"../../hooks\";\nimport { CARD_STATUSES } from \"../../constants\";\nimport \"./Words.css\";\n\nconst { SKIPPED, CORRECT, WRONG } = CARD_STATUSES;\n\nexport default () => {\n  const [wordsSolved, setWordsSolved] = useLocalStorage(\"wordsSolved\", []);\n  const [reviewWord, setReviewWord] = useState();\n\n  const wordIndex = wordsSolved.length;\n\n  return (\n    <div className=\"mt-de-words-page\">\n      <h1>Wörter</h1>\n      <div>\n        {!reviewWord && words && words.length && words.length > wordIndex && (\n          <WordQuizCard\n            word={words[wordIndex]}\n            key={words[wordIndex]}\n            onNextClick={charPicked => {\n              const word = words[wordIndex];\n              let status = SKIPPED;\n              if (charPicked) {\n                status = charPicked === word[0] ? CORRECT : WRONG;\n              }\n              setWordsSolved(\n                wordsSolved.concat([\n                  {\n                    word,\n                    id: wordIndex,\n                    charPicked,\n                    status\n                  }\n                ])\n              );\n            }}\n          />\n        )}\n        {reviewWord && (\n          <WordQuizCard\n            word={reviewWord.word}\n            key={reviewWord.id}\n            onNextClick={charPicked => {\n              let status = SKIPPED;\n              if (charPicked) {\n                status = charPicked === reviewWord.word[0] ? CORRECT : WRONG;\n              }\n              const newSolution = { ...reviewWord, charPicked, status };\n              const wordCopy = [...wordsSolved];\n              wordCopy[reviewWord.id] = newSolution;\n              setWordsSolved(wordCopy);\n              setReviewWord();\n            }}\n          />\n        )}\n        {wordsSolved && (\n          <History\n            words\n            elements={wordsSolved}\n            handleElementClick={word => setReviewWord(word)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import {useState} from 'react';\n\nexport default (key, initialValue) => {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n  \n    return [storedValue, setValue];\n  }","import React from \"react\";\nimport { SequenceQuizCard } from \"../../components\";\n\nimport \"./Sequence.css\";\nexport default () => {\n  return (\n    <div className=\"mt-de-sequence-page\">\n      <h1>Folgen</h1>\n      <SequenceQuizCard />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Index } from './containers';\n\nfunction App() {\n  return (\n    <Index/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}