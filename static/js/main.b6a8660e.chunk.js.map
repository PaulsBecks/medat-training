{"version":3,"sources":["components/WordQuizCard/WordQuizCard.js","components/SequenceQuizCard/SequenceQuizCard.js","components/Navbar/Sidebar.js","components/Button/Button.js","constants/index.js","components/History/History.js","components/Icon/index.js","components/Icon/Check.js","components/Icon/Failed.js","components/Icon/Retry.js","components/Icon/Skipped.js","components/Icon/Insta.js","components/Icon/Home.js","components/Icon/Medical.js","components/BottomBar/BottomBar.js","helpers/googleAnalytics.js","containers/Index/index.js","hooks/useLocalStorage.js","containers/Words/Words.js","helpers/generateSequence.js","containers/Sequence/Sequence.js","containers/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["shuffle","str","split","sort","Math","random","join","word","onNextClick","wordInRandomOrder","useMemo","toUpperCase","quizChars","firstChar","char","length","includes","chooseQuizChars","shuffledQuizChars","useState","selectedChar","setSelectedChar","showSolution","setShowSolution","className","map","key","onClick","type","name","checked","onChange","solutions","sequence","correctSolution","difs","handleNextClick","shuffledSolutions","a","i","j","floor","selectedSolution","setSelectedSolution","num","dif1","dif2","JSON","stringify","props","children","words","require","CARD_STATUSES","DIF_TYPES","PLUS","TIMES","SEQUENCE_TYPES","PERIODIC","SEQUENTIAL","SKIPPED","CORRECT","WRONG","elements","handleElementClick","isWords","isSequences","maxElements","setMaxElements","mouseOver","setMouseOver","showAllElements","sliceFrom","count","reduce","element","correct","wrong","skipped","status","slice","reverse","mouseIsOver","toLowerCase","id","onMouseOver","onMouseLeave","document","location","href","s","Icon","Skipped","Failed","Check","Retry","xmlns","width","height","viewBox","style","fill","d","Insta","version","x","y","Home","Medical","setSelectedQuiz","GA_ID","sendGAEvent","event_category","event_action","event_label","event_value","window","ga","gtag","sendGAPageView","page_path","selectedQuiz","initialValue","item","localStorage","getItem","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","useLocalStorage","wordsSolved","setWordsSolved","reviewWord","setReviewWord","wordIndex","charPicked","concat","newSolution","wordCopy","getNextNumber","last","dif","number","getRandomNumber","max","round","generateSolution","first","getDiff","Object","keys","generateSequence","sequenceType","firstNumber","push","f","times","r","execTimes","gr","e","indexOf","sa","Number","sequencesSolved","setSequencesSolved","reviewSequence","setReviewSequence","solutionPicked","sequenceCopy","App","Index","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6a8660e.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Button } from \"..\";\n\nimport \"./WordQuizCard.css\";\n\nconst shuffle = str => {\n  return str\n    .split(\"\")\n    .sort(() => 0.5 - Math.random())\n    .join(\"\");\n};\n\nconst chooseQuizChars = word => {\n  const firstChar = word[0].toUpperCase();\n  const wordInRandomOrder = shuffle(word).toUpperCase();\n  let quizChars = firstChar;\n\n  for (let char in wordInRandomOrder) {\n    if (quizChars.length >= 4) {\n      break;\n    }\n\n    if (!quizChars.includes(wordInRandomOrder[char])) {\n      quizChars += wordInRandomOrder[char];\n    }\n  }\n\n  return quizChars;\n};\n\nexport default ({ word, onNextClick }) => {\n  const wordInRandomOrder = useMemo(() => shuffle(word).toUpperCase(), [word]);\n  const quizChars = useMemo(() => chooseQuizChars(word), [word]);\n  const shuffledQuizChars = useMemo(() => shuffle(quizChars), [quizChars]);\n  const [selectedChar, setSelectedChar] = useState(shuffledQuizChars[0]);\n  const [showSolution, setShowSolution] = useState(false);\n\n  return (\n    <div className=\"mt-de-word-quiz-card\">\n      <h2>{wordInRandomOrder}</h2>\n      <p>Dieses Wort beginnt mit dem Buchstaben:</p>\n      <ul>\n        {shuffledQuizChars.split(\"\").map(char => (\n          <li key={char} onClick={() => setSelectedChar(char)}>\n            <input\n              type=\"radio\"\n              name=\"quiz-char\"\n              checked={char === selectedChar}\n              onChange={() => setSelectedChar(char)}\n            />\n            <span>{char}</span>\n          </li>\n        ))}\n      </ul>\n      {showSolution && <h3>{word}</h3>}\n      {!showSolution && (\n        <Button onClick={() => setShowSolution(true)}>Lösung</Button>\n      )}\n      {!showSolution && <Button className=\"mt-de-word-quiz-card-skip-button\" onClick={() => onNextClick()}>Skip</Button>}\n      {showSolution && (\n        <Button onClick={() => onNextClick(selectedChar)}>Nächstes Wort</Button>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from \"react\";\nimport { Button } from \"..\";\nimport \"./SequenceQuizCard.css\";\n\n//https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport default ({\n  solutions,\n  sequence,\n  difs,\n  correctSolution,\n  handleNextClick\n}) => {\n  const shuffledSolutions = useMemo(() => shuffle(solutions), [solutions]);\n  const [selectedSolution, setSelectedSolution] = useState(0);\n  const [showSolution, setShowSolution] = useState(false);\n\n  return (\n    <div className=\"ltn-de-sqc\">\n      <div className=\"ltn-de-sqc-sequence\">\n        {sequence.map((num, i) => (\n          <h2 key={`${num}:${i}`}>{num}</h2>\n        ))}\n      </div>\n      <p>Diese Folge kann mit folgenden Zahlen erweitert werden:</p>\n      <ul>\n        {shuffledSolutions.map(([dif1, dif2], i) => (\n          <li\n            onClick={() => setSelectedSolution(i)}\n            key={JSON.stringify([dif1, dif2])}\n          >\n            <input\n              type=\"radio\"\n              name=\"quiz-char\"\n              checked={i === selectedSolution}\n              onChange={() => setSelectedSolution(i)}\n            />\n            [{dif1}, {dif2}]\n          </li>\n        ))}\n      </ul>\n      {showSolution && (\n        <h3>\n          [{correctSolution[0]}, {correctSolution[1]}]\n        </h3>\n      )}\n      {!showSolution && (\n        <Button\n          onClick={() => {\n            setShowSolution(true);\n          }}\n        >\n          Lösung\n        </Button>\n      )}\n      {!showSolution && (\n        <Button\n          onClick={() => {\n            handleNextClick();\n          }}\n          className=\"mt-de-sequence-quiz-card-skip-button\"\n        >\n          Skip\n        </Button>\n      )}\n      {showSolution && (\n        <Button\n          onClick={() => {\n            handleNextClick(shuffledSolutions[selectedSolution]);\n            setShowSolution(false);\n          }}\n        >\n          Nächste Folge\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Sidebar.css\";\n\nexport default () => {\n  return (\n    <div className=\"mt-de-navbar\">\n      <h2>aufgabenmed.at</h2>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nexport default ({ className, ...props }) => (\n  <button className={`mt-de-button ${className || \"\"}`} {...props}>\n    {props.children}\n  </button>\n);\n","export const words = require(\"./words.json\");\n\nexport const CARD_STATUSES = {\n  SKIPPED: \"SKIPPED\",\n  CORRECT: \"CORRECT\",\n  WRONG: \"WRONG\"\n};\n\nexport const DIF_TYPES = {\n  PLUS: \"PLUS\",\n  TIMES: \"TIMES\"\n};\n\nexport const SEQUENCE_TYPES = {\n  PERIODIC: \"PERIODIC\",\n  SEQUENTIAL: \"SEQUENTIAL\"\n};\n","import React, { useState } from \"react\";\nimport { Button, Icon } from \"..\";\nimport { CARD_STATUSES } from \"../../constants\";\n\nimport \"./History.css\";\n\nconst HISTORY_STEP_SIZE = 10;\nconst { SKIPPED, CORRECT, WRONG } = CARD_STATUSES;\n\nexport default ({\n  elements = [],\n  handleElementClick,\n  isWords,\n  isSequences\n}) => {\n  const [maxElements, setMaxElements] = useState(HISTORY_STEP_SIZE);\n  const [mouseOver, setMouseOver] = useState();\n  const showAllElements = elements.length <= maxElements;\n  const sliceFrom = showAllElements ? 0 : elements.length - maxElements;\n  const count = elements.reduce(\n    ({ correct, wrong, skipped }, element) => ({\n      correct: element.status === CORRECT ? correct + 1 : correct,\n      wrong: element.status === WRONG ? wrong + 1 : wrong,\n      skipped: element.status === SKIPPED ? skipped + 1 : skipped\n    }),\n    { correct: 0, wrong: 0, skipped: 0 }\n  );\n  return (\n    <div className=\"mt-de-history\">\n      <div className=\"mt-de-history-header\">\n        <h2>History</h2>\n        <h2>\n          {count.correct}/{count.correct + count.wrong}\n        </h2>\n      </div>\n      <ul className=\"mt-de-history-list\">\n        {elements\n          .slice(sliceFrom)\n          .reverse()\n          .map((element, i) => {\n            const { status } = element;\n            const mouseIsOver = mouseOver === i;\n            return (\n              <li\n                className={`mt-de-history-list-item mt-de-history-list-item-${status.toLowerCase()}`}\n                key={element.id}\n                onMouseOver={() => setMouseOver(i)}\n                onMouseLeave={() => setMouseOver()}\n                onClick={() => {\n                  document.location.href = \"#\";\n                  handleElementClick(element);\n                }}\n              >\n                {isWords && <span>{element.word}</span>}\n                {isSequences && (\n                  <div>\n                    {element.sequence.map((s, i) => (\n                      <span\n                        key={`${s}:${i}`}\n                        className=\"mt-de-history-list-item-sequence-number\"\n                      >\n                        {s}\n                      </span>\n                    ))}\n                  </div>\n                )}\n                <div className=\"mt-de-history-list-item-icon\">\n                  {!mouseIsOver && status === SKIPPED && <Icon.Skipped />}\n                  {!mouseIsOver && status === WRONG && <Icon.Failed />}\n                  {!mouseIsOver && status === CORRECT && <Icon.Check />}\n                  {mouseIsOver && <Icon.Retry />}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n      {!showAllElements && (\n        <Button\n          className=\"mt-de-history-more-button\"\n          onClick={() => setMaxElements(maxElements + HISTORY_STEP_SIZE)}\n        >\n          Mehr\n        </Button>\n      )}\n    </div>\n  );\n};\n","import Check from \"./Check\";\nimport Failed from \"./Failed\";\nimport Retry from \"./Retry\";\nimport Skipped from \"./Skipped\";\nimport Insta from \"./Insta\";\nimport Home from \"./Home\";\nimport Medical from \"./Medical\";\n\nexport default {\n  Check,\n  Failed,\n  Retry,\n  Skipped,\n  Insta,\n  Home,\n  Medical\n};\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M9 16.17L5.53 12.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L9 16.17z\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.16 0-7.74 2.42-9.44 5.93-.32.67.04 1.47.75 1.71.59.2 1.23-.08 1.5-.64 1.3-2.66 4.03-4.5 7.19-4.5 1.95 0 3.73.72 5.12 1.88l-1.91 1.91c-.63.63-.19 1.71.7 1.71H21c.55 0 1-.45 1-1V9.41c0-.89-1.08-1.34-1.71-.71l-1.89 1.9z\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    style={{ width: \"100%\", height: \"100%\" }}\n  >\n    <path d=\"M19 13H5v-2h14v2z\" />\n    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    version=\"1.1\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 512 512\"\n    style={{ height: \"100%\", width: \"100%\" }}\n  >\n    <g>\n      <path\n        d=\"M336,96c21.2,0,41.3,8.4,56.5,23.5S416,154.8,416,176v160c0,21.2-8.4,41.3-23.5,56.5S357.2,416,336,416H176\n\t\tc-21.2,0-41.3-8.4-56.5-23.5S96,357.2,96,336V176c0-21.2,8.4-41.3,23.5-56.5S154.8,96,176,96H336 M336,64H176\n\t\tc-61.6,0-112,50.4-112,112v160c0,61.6,50.4,112,112,112h160c61.6,0,112-50.4,112-112V176C448,114.4,397.6,64,336,64L336,64z\"\n      />\n      <g>\n        <path d=\"M360,176c-13.3,0-24-10.7-24-24s10.7-24,24-24c13.2,0,24,10.7,24,24S373.2,176,360,176z\" />\n      </g>\n      <path\n        d=\"M256,192c35.3,0,64,28.7,64,64c0,35.3-28.7,64-64,64c-35.3,0-64-28.7-64-64C192,220.7,220.7,192,256,192 M256,160\n\t\tc-53,0-96,43-96,96s43,96,96,96c53,0,96-43,96-96S309,160,256,160L256,160z\"\n      />\n    </g>\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg viewBox=\"0 0 512 512\" style={{ width: \"100%\", height: \"100%\" }}>\n    <g>\n      <path\n        d=\"M258.5,104.1c-1.5-1.2-3.5-1.2-5,0l-156,124.8c-0.9,0.8-1.5,1.9-1.5,3.1v230c0,1.1,0.9,2,2,2h108c1.1,0,2-0.9,2-2V322\n\t\tc0-1.1,0.9-2,2-2h92c1.1,0,2,0.9,2,2v140c0,1.1,0.9,2,2,2h108c1.1,0,2-0.9,2-2V232c0-1.2-0.6-2.4-1.5-3.1L258.5,104.1z\"\n      />\n      <path\n        d=\"M458.7,204.2l-189-151.4C265.9,49.7,261,48,256,48c-5,0-9.9,1.7-13.7,4.8L160,119.7V77.5c0-1.1-0.9-2-2-2H98\n\t\tc-1.1,0-2,0.9-2,2v92.2l-42.7,35.1c-3.1,2.5-5.1,6.2-5.3,10.2c-0.2,4,1.3,7.9,4.1,10.7c2.6,2.6,6.1,4.1,9.9,4.1\n\t\tc3.2,0,6.3-1.1,8.8-3.1l183.9-148c0.5-0.4,0.9-0.4,1.3-0.4s0.8,0.1,1.3,0.4l183.9,147.4c2.5,2,5.6,3.1,8.8,3.1\n\t\tc3.7,0,7.2-1.4,9.9-4.1c2.9-2.8,4.4-6.7,4.2-10.7C463.8,210.4,461.9,206.7,458.7,204.2z\"\n      />\n    </g>\n  </svg>\n);\n","import React from \"react\";\nexport default () => (\n  <svg viewBox=\"0 0 448 512\" style={{ width: \"100%\", height: \"100%\" }}>\n    <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm216-135.4v49c36.5 7.4 64 39.8 64 78.4v41.7c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V416c0-62.8-96-65.1-96 1.9v26.7l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9V416c0-38.6 27.5-70.9 64-78.4v-45.2c-2.2.7-4.4 1.1-6.6 1.9-18 6.3-37.3 9.8-57.4 9.8s-39.4-3.5-57.4-9.8c-7.4-2.6-14.9-4.2-22.6-5.2v81.6c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4v-80.4C48.5 301 0 355.8 0 422.4v44.8C0 491.9 20.1 512 44.8 512h358.4c24.7 0 44.8-20.1 44.8-44.8v-44.8c0-72-56.8-130.3-128-133.8z\"></path>\n  </svg>\n);\n","import React from \"react\";\n\nimport { Button, Icon } from \"..\";\n\nimport \"./BottomBar.css\";\n\nexport default ({ setSelectedQuiz }) => (\n  <div className=\"mt-de-bottom-bar\">\n    <div>\n      <Button\n        className=\"mt-de-bottom-bar-button mt-de-bottom-bar-sequences-button\"\n        onClick={() => setSelectedQuiz(\"sequence\")}\n      >\n        Folgen\n      </Button>\n      <Button\n        className=\"mt-de-bottom-bar-button mt-de-bottom-bar-words-button \"\n        onClick={() => setSelectedQuiz(\"words\")}\n      >\n        Wörter\n      </Button>\n    </div>\n    <div>\n      <Button\n        className=\"mt-de-bottom-bar-button mt-de-bottom-bar-icon-button\"\n        onClick={() => setSelectedQuiz(\"none\")}\n      >\n        <Icon.Home />\n      </Button>\n    </div>\n    <div>\n      <Button\n        className=\"mt-de-bottom-bar-button mt-de-bottom-bar-icon-button\"\n        onClick={() => setSelectedQuiz(\"sequence\")}\n      >\n        <Icon.Insta />\n      </Button>\n    </div>\n  </div>\n);\n","const GA_ID = \"UA-148033321-1\";\n\nexport function sendGAEvent(\n  event_category,\n  event_action,\n  event_label,\n  event_value\n) {\n  if (window && window.ga) {\n    window.gtag(\"event\", \"view_item\", {\n      event_category,\n      event_action,\n      event_label,\n      event_value\n    });\n  }\n}\n\nexport function sendGAPageView(page_path) {\n  if (window && window.gtag) {\n    window.gtag(\"config\", GA_ID, { page_path });\n  }\n}\n\nexport default {\n  sendGAEvent,\n  sendGAPageView\n};\n","import React, { useState, useMemo } from \"react\";\nimport { Words, Sequence, Home } from \"..\";\nimport { BottomBar, Navbar } from \"../../components\";\nimport { sendGAPageView } from \"../../helpers/googleAnalytics\";\n\nexport default () => {\n  const [selectedQuiz, setSelectedQuiz] = useState(\"none\");\n  useMemo(() => sendGAPageView(`/${selectedQuiz}`), [selectedQuiz]);\n\n  return (\n    <div>\n      <Navbar selectedQuiz={selectedQuiz} />\n      {selectedQuiz === \"none\" && <Home setSelectedQuiz={setSelectedQuiz} />}\n      {selectedQuiz === \"words\" && <Words />}\n      {selectedQuiz === \"sequence\" && <Sequence />}\n      <BottomBar setSelectedQuiz={setSelectedQuiz} />\n    </div>\n  );\n};\n","import {useState} from 'react';\n\nexport default (key, initialValue) => {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n  \n    return [storedValue, setValue];\n  }","import React, { useState, useMemo } from \"react\";\nimport { WordQuizCard, History } from \"../../components\";\nimport { words } from \"../../constants\";\nimport { useLocalStorage } from \"../../hooks\";\nimport { CARD_STATUSES } from \"../../constants\";\nimport { sendGAEvent } from \"../../helpers/googleAnalytics\";\nimport \"./Words.css\";\n\nconst { SKIPPED, CORRECT, WRONG } = CARD_STATUSES;\n\nexport default () => {\n  const [wordsSolved, setWordsSolved] = useLocalStorage(\"wordsSolved\", []);\n  useMemo(() => {\n    sendGAEvent(\"Word\", \"new\", wordsSolved.length);\n  }, [wordsSolved]);\n  const [reviewWord, setReviewWord] = useState();\n\n  const wordIndex = wordsSolved.length;\n\n  return (\n    <div className=\"mt-de-words-page\">\n      <h1>Wörter</h1>\n      <div>\n        {!reviewWord && words && words.length && words.length > wordIndex && (\n          <WordQuizCard\n            word={words[wordIndex]}\n            key={words[wordIndex]}\n            onNextClick={charPicked => {\n              const word = words[wordIndex];\n              let status = SKIPPED;\n              if (charPicked) {\n                status = charPicked === word[0] ? CORRECT : WRONG;\n              }\n              setWordsSolved(\n                wordsSolved.concat([\n                  {\n                    word,\n                    id: wordIndex,\n                    charPicked,\n                    status\n                  }\n                ])\n              );\n            }}\n          />\n        )}\n        {reviewWord && (\n          <WordQuizCard\n            word={reviewWord.word}\n            key={reviewWord.id}\n            onNextClick={charPicked => {\n              let status = SKIPPED;\n              if (charPicked) {\n                status = charPicked === reviewWord.word[0] ? CORRECT : WRONG;\n              }\n              const newSolution = { ...reviewWord, charPicked, status };\n              const wordCopy = [...wordsSolved];\n              wordCopy[reviewWord.id] = newSolution;\n              setWordsSolved(wordCopy);\n              setReviewWord();\n            }}\n          />\n        )}\n        {wordsSolved && (\n          <History\n            isWords\n            elements={wordsSolved}\n            handleElementClick={word => setReviewWord(word)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { DIF_TYPES, SEQUENCE_TYPES } from \"../constants\";\n\nconst { PLUS, TIMES } = DIF_TYPES;\nconst { SEQUENTIAL, PERIODIC } = SEQUENCE_TYPES;\n\nfunction getNextNumber(last, dif) {\n  if (dif.type === TIMES) {\n    return last * dif.number;\n  }\n  if (dif.type === PLUS) {\n    return last + dif.number;\n  }\n  return dif.number;\n}\n\nconst getRandomNumber = max => Math.round(Math.random() * max - max / 2);\n\nfunction generateSolution(sequence, dif1, dif2, type) {\n  if (type === SEQUENTIAL) {\n    const first = getNextNumber(sequence[sequence.length - 1], dif1);\n    const second = getNextNumber(first, dif2);\n    return [first, second];\n  }\n  if (type === PERIODIC) {\n    const first = getNextNumber(sequence[sequence.length - 3], dif1);\n    const second = getNextNumber(sequence[sequence.length - 2], dif2);\n    return [first, second];\n  }\n  return null;\n}\n\nconst getDiff = () => {\n  const type = Object.keys(DIF_TYPES)[\n    Math.floor(Math.random() * Object.keys(DIF_TYPES).length)\n  ];\n  let number = type === PLUS ? getRandomNumber(100) : getRandomNumber(10);\n  while (type === TIMES && number === 0) {\n    number = getRandomNumber(10);\n  }\n  return {\n    type,\n    number\n  };\n};\n\nfunction execTimes(f, times) {\n  let r = [];\n  for (let i = 0; i < times; i++) {\n    r.push(f());\n  }\n  return r;\n}\n\nexport default function generateSequence() {\n  let sequence = [];\n  let sequenceType = Object.keys(SEQUENCE_TYPES)[Math.floor(Math.random() * 2)];\n  const firstNumber = getRandomNumber(100);\n  sequence.push(firstNumber);\n  const difs = execTimes(getDiff, 3);\n  for (let i = 0; i < 6; i++) {\n    if (sequenceType === SEQUENTIAL) {\n      sequence.push(getNextNumber(sequence[i], difs[i % 3]));\n    } else {\n      if (i < 2) {\n        sequence.push(getRandomNumber(100));\n      } else {\n        sequence.push(getNextNumber(sequence[i - 2], difs[i % 3]));\n      }\n    }\n  }\n  const correctSolution = generateSolution(\n    sequence,\n    difs[0],\n    difs[1],\n    sequenceType\n  );\n  let solutions = [correctSolution];\n  const gr = () => Math.floor(Math.random() * 3);\n  let a = [`0;1`];\n  let i = 0;\n  while (i < 3) {\n    const e = `${gr()};${gr()}`;\n    if (a.indexOf(e) < 0) {\n      const sa = e.split(\";\");\n      a.push(e);\n      solutions.push(\n        generateSolution(\n          sequence,\n          difs[Number(sa[0])],\n          difs[Number(sa[1])],\n          sequenceType\n        )\n      );\n      i++;\n    }\n  }\n  return { sequence, difs, sequenceType, solutions, correctSolution };\n}\n","import React, { useState, useMemo } from \"react\";\nimport { SequenceQuizCard, History } from \"../../components\";\nimport { useLocalStorage } from \"../../hooks\";\nimport { generateSequence } from \"../../helpers\";\nimport { CARD_STATUSES } from \"../../constants\";\nimport { sendGAEvent } from \"../../helpers/googleAnalytics\";\n\nimport \"./Sequence.css\";\n\nconst { SKIPPED, CORRECT, WRONG } = CARD_STATUSES;\n\nexport default () => {\n  const [sequencesSolved, setSequencesSolved] = useLocalStorage(\n    \"sequencesSolved\",\n    []\n  );\n\n  useMemo(() => {\n    sendGAEvent(\"Sequence\", \"new\", sequencesSolved.length);\n  }, [sequencesSolved]);\n\n  const [reviewSequence, setReviewSequence] = useState();\n\n  const { sequence, difs, sequenceType, solutions, correctSolution } = useMemo(\n    generateSequence,\n    [sequencesSolved]\n  );\n\n  return (\n    <div className=\"mt-de-sequence-page\">\n      <h1>Folgen</h1>\n\n      <div>\n        {reviewSequence && (\n          <SequenceQuizCard\n            {...reviewSequence}\n            handleNextClick={solutionPicked => {\n              let status = SKIPPED;\n              if (solutionPicked) {\n                status =\n                  JSON.stringify(solutionPicked) ===\n                  JSON.stringify(reviewSequence.correctSolution)\n                    ? CORRECT\n                    : WRONG;\n              }\n              const newSolution = { ...reviewSequence, solutionPicked, status };\n              const sequenceCopy = [...sequencesSolved];\n              sequenceCopy[newSolution.id] = newSolution;\n              setSequencesSolved(sequenceCopy);\n              setReviewSequence();\n            }}\n          />\n        )}\n        {!reviewSequence && (\n          <SequenceQuizCard\n            {...{ sequence, difs, solutions, correctSolution }}\n            handleNextClick={solutionPicked => {\n              let status = SKIPPED;\n              if (solutionPicked) {\n                status =\n                  JSON.stringify(solutionPicked) ===\n                  JSON.stringify(correctSolution)\n                    ? CORRECT\n                    : WRONG;\n              }\n              setSequencesSolved(\n                sequencesSolved.concat({\n                  sequence,\n                  solutions,\n                  difs,\n                  sequenceType,\n                  correctSolution,\n                  id: sequencesSolved.length,\n                  status\n                })\n              );\n            }}\n          />\n        )}\n        <History\n          isSequences\n          elements={sequencesSolved}\n          handleElementClick={setReviewSequence}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./Home.css\";\nimport { Icon, Button } from \"../../components\";\n\nexport default ({ setSelectedQuiz }) => (\n  <div className=\"mt-de-home\">\n    <div className=\"mt-de-home-header\">\n      <div className=\"mt-de-home-header-content\">\n        <h1>Kostenlose Aufgaben für den Medizinertest in Österreich</h1>\n        <p>\n          Auf dieser Webseite findest du kostenlos Aufgaben für deine Medizin\n          Aufnahmeprüfung. Aktuell kannst du Zahlenfolgen und vermischte Wörter\n          üben.\n          <br />\n          <br />\n          Wähle eine der Kategorien aus um mit den Aufagben zu beginnen oder\n          scroll nach unten, um zu erfahren wie alles funktioniert.\n        </p>\n      </div>\n      <div className=\"mt-de-home-header-icon\">\n        <Icon.Medical />\n      </div>\n    </div>\n    <div className=\"mt-de-home-categories-section\">\n      <h2>Kategorien</h2>\n      <div>\n        <Button\n          className=\"mt-de-home-words-button\"\n          onClick={() => setSelectedQuiz(\"words\")}\n        >\n          Wörter\n        </Button>\n        <Button\n          className=\"mt-de-home-sequences-button\"\n          onClick={() => setSelectedQuiz(\"sequence\")}\n        >\n          Folgen\n        </Button>\n      </div>\n    </div>\n    {/*<div>\n      <div>\n        <h2>Endloser Aufgabenfluss</h2>\n        <p>\n          Auf aufgabenmed.at kann du so viele Aufgaben machen bis du deinen\n          Mediziner Test bestanden hast. Es gibt keine Begrenzungen und keine\n          Limits.\n          <br />\n          <br />\n          Die Algorithmen auf dieser Seite generieren ständig neue Aufgaben\n          damit du immer weiter üben kannst.\n        </p>\n      </div>\n    </div>*/}\n  </div>\n);\n","import React from 'react';\nimport { Index } from './containers';\n\nfunction App() {\n  return (\n    <Index/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}